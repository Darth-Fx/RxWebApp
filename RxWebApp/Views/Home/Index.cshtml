@{
    ViewBag.Title = "Home Page";
}

<div class="jumbotron">
    <h1>ASP.NET + Rx = true</h1>
    <p class="lead">
        Reactive Extensions bring all the power you need to leverage compositing of asynchronous events.
        Why not use it in an ASP.NET MVC app also? This small example app illustrates how.
        There are unit tests to demonstrate and prove the basic concepts.
    </p>
    <p>The quickest way to test it is to click on the 'Orders' link at the top of the page.</p>
    <p>For more information, check out the source code, or use the links in the page footer below.</p>
</div>

<div class="row">
    <div class="col-md-4">
        <h2>Intro to Rx</h2>
        <p>To get started with a thorough understanding of Rx concepts, you can visit the website 'Intro to Rx'. It is very well written, and I highly recommend it.</p>
        <p><a class="btn btn-default" href="http://introtorx.com/">Read more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Rx Marbles</h2>
        <p>
            See and play with a visual representation of different streams and how to use the Rx operators.
        </p>
        <p><a class="btn btn-default" href="http://rxmarbles.com/">Read more &raquo;</a></p>
    </div>
    <div class="col-md-4">
        <h2>Reactive X</h2>
        <p>You can easily use Rx for a variety of languages and platforms. Read more here.</p>
        <p><a class="btn btn-default" href="http://reactivex.io/">Read more &raquo;</a></p>
    </div>
</div>